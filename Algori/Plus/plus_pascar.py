T = int(input())  # 테스트 케이스의 수를 입력받습니다.

st = []  # 스택을 초기화합니다.
def push(data):  # 스택에 데이터를 추가하는 함수입니다.
    st.append(data)
def pop():  # 스택에서 데이터를 제거하는 함수입니다.
    return st.pop()

for tc in range(1, T+1):  # 각 테스트 케이스에 대해 반복합니다.
    N = int(input())  # 파스칼의 삼각형의 크기를 입력받습니다.
    if N == 1:  # 크기가 1인 경우를 처리합니다.
        result = [[1]]
    else:  # 크기가 1보다 큰 경우를 처리합니다.
        result = [[1], [1, 1]]
        for i in range(3, N+1):  # 크기가 3 이상인 경우, 각 행에 대해 반복합니다.
            for v in result[-1]:  # 이전 행의 각 값을 스택에 추가합니다.
                push(v)
            tmp1 = pop()  # 스택에서 값을 하나 뽑습니다.
            row = []  # 새로운 행을 초기화합니다.
            for _ in range(i-2):  # 이전 행의 값들을 두 개씩 뽑아서 합친 값을 새 행에 추가합니다.
                tmp2 = pop()  # 스택에서 값을 하나 뽑습니다.
                row.append(tmp1 + tmp2)  # 두 값을 더해서 새 행에 추가합니다.
                tmp1 = tmp2  # 다음 루프를 위해 tmp1을 업데이트합니다.
            result.append([1] + row + [1])  # 새 행의 양 끝에 1을 추가하고, 결과 리스트에 추가합니다.
    print(f'#{tc}')  # 테스트 케이스 번호를 출력합니다.
    for r in result:  # 각 행을 출력합니다.
        print(*r, sep=' ')

'''
1. 파스칼의 삼각형의 크기 N을 입력받습니다.
2. 크기가 1인 경우, 결과는 [[1]]입니다.
3. 크기가 1보다 큰 경우, 결과는 [[1], [1, 1]]로 시작합니다.
4. 크기가 3 이상인 경우, 각 행에 대해 다음을 수행합니다:
    4.1. 이전 행의 각 값을 스택에 추가합니다.
    4.2. 스택에서 값을 하나 뽑습니다.
    4.3. 새로운 행을 초기화합니다.
    4.4. 이전 행의 값들을 두 개씩 뽑아서 합친 값을 새 행에 추가합니다.
    4.5. 새 행의 양 끝에 1을 추가하고, 결과 리스트에 추가합니다.

이 알고리즘은 스택의 "Last In, First Out" 특성을 활용하여 이전 행의 값을 두 개씩 뽑아서 합친 값을 새 행에 추가합니다. 이렇게 하면, 파스칼의 삼각형의 각 행을 쉽게 생성할 수 있습니다.
'''